---
# How many hours of comments you want to keep
# 24 hours in a day,
# 168 hours in a week,
# 672 hours in two fortnights,
# 720 hours in a month (30 days),
# 8766 hours in a year (365.25 days)
hours: 24

# Max score, higher than this and it'll be kept.
max_score: 100

# Options: new, top, controversial, more?
sort: new

# Enables print statements to notify you of what's going on
verbose: True

# Removes your vote before deleting the item
clear_vote: False

# Options: comments, submitted, overview
# See: https://github.com/mellort/reddit_api/blob/master/reddit/objects.py#L359
# Overview: both submissions and comments. Comments / Submitted are as expected
item: overview

# Anything in this list won't be deleted, coma delimited
# spaces should work as .strip() is called after splitting
# on comma.
whitelist: [AskScience, TheCulture, redditdev, programming, charity, netsec]

# If you want any specific posts to be whitelisted stick 'em in here
whitelist_ids: []

# If you want to whitelist or blacklist specific multireddits, add them here
# Each one must be a list of 2 elements: username, multireddit
# Example:
# multi_blacklist:
#     - [myusername, mymulti]
#     - [someotheruser, theirmulti]
multi_blacklist: []
multi_whitelist: []

# If you set this then no editing or deleting will be done
# but the output from the program will be shown as an example
trial_run: False

# Ignore distinguished comments.
whitelist_distinguished: True

# Ignore gilded (gold) comments
whitelist_gilded: True

# Delete everything older that this date, **This ignores whitelists**.
# Can be used as a second deletion, as in "delete items older than 24 hours
# except on whitelisted subreddits but after 3 months delete everything.
nuke_hours: 720

# Save a copy to disk of comments and posts before deleting them.
keep_a_copy: False
save_directory: /tmp

# Replacement text format
# Defines what you want to edit deleted content with pre-deletion (to ensure
# it's not saved in their database).
# Default: Random string. But this can be detected as spam in some cases.
# options: [random, dot, original, "user entered string"]
# Use the original option to keep the original content. This skips replacement
# entirely. **Note: Your comment will still be available in their database**.
replacement_format: random

# Debug level, how much output you want
# See: https://docs.python.org/3/library/logging.html#logging-levels
debug: DEBUG

# Define your own wordlist to use as substitution text when
# replacement_format == random
wordlist: []

# Batch cooldown
# This controls how long (in seconds) to wait between each set of 1000 deletions.
batch_cooldown: 10

# vim: syntax=yaml ts=2
