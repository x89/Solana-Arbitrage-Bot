(ql:quickload "drakma")
(ql:quickload "cl-json")

(defun get-cookie-jar (username password)
  (let ((cookie-jar (make-instance 'drakma:cookie-jar))
        (parameters (list (cons "api_type" "json")
                          (cons "user"  username)
                          (cons "passwd" password))))
    (drakma:http-request "http://www.reddit.com/api/login" :method :post :parameters parameters
                         :cookie-jar cookie-jar)
    cookie-jar))

(defun get-modhash (cookie)
  "Always write your code in the clearest way possible"
  (cdr (assoc :modhash
              (cdr (assoc :data
                          (json:decode-json-from-string (drakma:http-request "http://www.reddit.com/api/me.json" :cookie-jar cookie)))))))

(defun get-comment-ids (comments)
  (mapcar (lambda (x) (cdr (assoc :name (cdr (assoc :data x))))) (cdr (assoc :children (cdr (assoc :data comments))))))

(defun get-all-comments (username)
  (json:decode-json-from-string  (drakma:http-request (format nil "http://www.reddit.com/user/~a/comments.json" username))))

(defun edit-comment (comment-id text &key (username nil) (password nil) (cookie nil) (modhash nil))
  (let* ((cookie  (if (null cookie)
                      (get-cookie-jar username password)
                      cookie))
         (modhash (if (null modhash)
                      (get-modhash cookie)
                      modhash)))
    (drakma:http-request "http://www.reddit.com/api/editusertext"
                         :method :post
                         :parameters (list (cons "api_type" "json")
                                           (cons "text" text)
                                           (cons "thing_id" comment-id)
                                           (cons "uh" modhash))
                         :cookie-jar cookie)))

(defun delete-comment (comment-id &key (username nil) (password nil) (cookie nil) (modhash nil))
  (let* ((cookie  (if (null cookie)
                      (get-cookie-jar username password)
                      cookie))
         (modhash (if (null modhash)
                      (get-modhash cookie)
                      modhash)))
    (drakma:http-request "http://www.reddit.com/api/del"
                         :method :post
                         :parameters (list (cons "thing_id" comment-id)
                                           (cons "uh" modhash))
                         :cookie-jar cookie)))

(defun edit-all-comments (username password)
  (let* ((cookie (get-cookie-jar username password))
        (modhash (get-modhash cookie)))
    (mapcar (lambda (x) (edit-comment x "Feel The Mighty Thrust Of Lisp" :cookie cookie :modhash modhash))
            (get-comment-ids (get-all-comments username)))))

(defun delete-all-comments (username password)
  (let* ((cookie (get-cookie-jar username password))
         (modhash (get-modhash cookie)))
    (mapcar (lambda (x) (delete-comment x :cookie cookie :modhash modhash))
            (get-comment-ids (get-all-comments username)))))
